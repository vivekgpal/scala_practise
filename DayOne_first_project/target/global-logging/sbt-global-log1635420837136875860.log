[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\8002263\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\8002263\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Amazon.com Inc. Java 1.8.0_402)
[debug]       Load.loadUnit: plugins took 353.4757ms
[debug]       Load.loadUnit: defsScala took 0.5046ms
[debug] [Loading] Scanning directory C:\Users\8002263\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\8002263\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.6536 ms
[debug]           Load.resolveProject(global-plugins) took 57.3557ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\8002263\.sbt\1.0\plugins, plugins: List(<none>))) took 115.8273ms
[debug] [Loading] Done in C:\Users\8002263\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 145.1767ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3666ms
[debug]     Load.loadUnit(file:/C:/Users/8002263/.sbt/1.0/plugins/, ...) took 508.3381ms
[debug]   Load.apply: load took 758.2605ms
[debug]   Load.apply: resolveProjects took 13.9271ms
[debug]   Load.apply: finalTransforms took 96.5339ms
[debug]   Load.apply: config.delegates took 12.8811ms
[debug]   Load.apply: Def.make(settings)... took 543.6121ms
[debug]   Load.apply: structureIndex took 127.0034ms
[debug]   Load.apply: mkStreams took 2.35ms
[info] loading global plugins from C:\Users\8002263\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8228.3644ms
[debug]           Load.loadUnit: plugins took 31.3142ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\8002263\IdeaProjects\DayOne_first_project\project
[debug]             Load.loadUnit: mkEval took 10.0903ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\8002263\IdeaProjects\DayOne_first_project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6006 ms
[info] loading settings for project dayone_first_project-build from idea.sbt ...
[debug]               Load.resolveProject(dayone_first_project-build) took 5.1059ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dayone_first_project-build, base: C:\Users\8002263\IdeaProjects\DayOne_first_project\project, plugins: List(<none>))) took 7.2638ms
[debug] [Loading] Done in C:\Users\8002263\IdeaProjects\DayOne_first_project\project, returning: (dayone_first_project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 448.3882ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.1224ms
[debug]         Load.loadUnit(file:/C:/Users/8002263/IdeaProjects/DayOne_first_project/project/, ...) took 484.7381ms
[debug]       Load.apply: load took 486.5757ms
[debug]       Load.apply: resolveProjects took 0.1169ms
[debug]       Load.apply: finalTransforms took 11.5207ms
[debug]       Load.apply: config.delegates took 0.5832ms
[debug]       Load.apply: Def.make(settings)... took 93.7666ms
[debug]       Load.apply: structureIndex took 29.1523ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\8002263\IdeaProjects\DayOne_first_project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 1684.7397ms
[debug]     Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\8002263\IdeaProjects\DayOne_first_project
[debug]       Load.loadUnit: mkEval took 0.3258ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.2931 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 57.3524ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\8002263\IdeaProjects\DayOne_first_project, plugins: List(<none>))) took 63.357ms
[debug] [Loading] Done in C:\Users\8002263\IdeaProjects\DayOne_first_project, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 346.201ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.0021ms
[debug]   Load.loadUnit(file:/C:/Users/8002263/IdeaProjects/DayOne_first_project/, ...) took 2037.9134ms
[debug] Load.apply: load took 2040.0175ms
[debug] Load.apply: resolveProjects took 0.1416ms
[debug] Load.apply: finalTransforms took 32.7539ms
[debug] Load.apply: config.delegates took 0.4139ms
[debug] Load.apply: Def.make(settings)... took 76.6288ms
[debug] Load.apply: structureIndex took 34.3771ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to DayOne_first_project (in build file:/C:/Users/8002263/IdeaProjects/DayOne_first_project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61986 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61986, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to DayOne_first_project (in build file:/C:/Users/8002263/IdeaProjects/DayOne_first_project/)
[debug] > Exec(idea-shell, None, None)
